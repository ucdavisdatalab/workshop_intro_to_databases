---
title: "An Overview of Databases and Data Storage"
title-slide-attributes:
  data-background-image: img/slides/datalab-logo-full-color-rgb.png
  data-background-size: 35%
  data-background-position: 5% 2%
author: "Elise Hellwig"
format: 
  revealjs:
    sc-sb-title: true
    theme: simple
filters:
  - reveal-header
slide-level: 3
editor: source
bibliography: data/references.bib  
nocite: '@*'
---

```{r format_cars, echo=FALSE}

makers = c('Mazda', 'Merc', 'Toyota', 'Ferarri', 'Lincoln', 'Chrysler', 'Dodge')
origins = c(rep('Japan', 2), rep('Europe', 7), rep('Japan', 2), rep('USA', 3))


maker_ids = sapply(makers, grep, rownames(mtcars)) |> 
  unlist(use.names=FALSE) |>
  unique()

mpg = mtcars[maker_ids, c('mpg', 'cyl', 'hp', 'wt', 'am')]

rownames(mpg) = gsub('Merc', 'Mercedes-Benz', rownames(mpg))
mpg$origin = origins

names(mpg) = c('mpg', 'cylinders', 'horsepower', 'weight', 'manual', 'origin')

```
# Introduction {background-image="img/slides/trail.png"
                background-size="60%"
                background-opacity="0.5"}

::: {.notes}
Before we dive in...some info. Not required but helpful for me
to know. Raise your hand if:

-   Have data you are working with or are in the process of collecting data
-   Analyze data using a programming language like R or Python
-   Know what a database is
-   Have used a database before


:::


## Research Computing Workshops {background-image="img/slides/trail.png"
                        background-size="8%" background-opacity="0.9"
                        background-position="97% 97%"}

<br>

::: {style="font-size: 130%;"}


-   Introduction to SQL, 4/18 (event, [[reader]{.underline}][dl_sql])

-   Spatial SQL, 5/3 (event, [[reader]{.underline}][dl_ssql])

:::

<br>
<center>![](img/slides/datalab-logo-full-color-rgb.png){width="70%"}</center>




[micro]: https://ucd.badgr.com/public/pathway/6160c163fc391a6821c02fbd
[dl_sql]:  https://ucdavisdatalab.github.io/workshop_intro_to_sql/
[dl_ssql]: https://ucdavisdatalab.github.io/Spatial_SQL/

:::{.notes}

If you decide you want to store your data in database, this would be a good 
next step.

:::

## {background-image="img/slides/trail.png"
                background-size="8%" background-opacity="0.9"
                background-position="97% 97%"}
                
<center>
![](img/data_store_factors.png){width="80%"}
</center>

:::{.notes}
Data store -> method of storing your data.
databases are a type data store but not the only type
:::


## Data Storage Considerations {.smaller
                                background-image="img/slides/trail.png" 
                                background-size="8%" background-opacity="0.9"
                                background-position="97% 97%"}



::: {style="font-size: 90%;"}

1.  **Data Structure:** What are my research questions?

2.  **Data Interaction**
       
    - What kinds of analysis will I do?
    - How does my data need to be formatted?

3.  **Data Management**
    
    - When and how is the data collected?
    - Who needs access to it? one or more people?
    - How long does the data need to persist?

4.  **Computing Resources**

    - How much data do I have?
    - Do I have access to external or shared storage space?
    - What software to I have licenses for?

:::

:::{.notes}
Will go over how each of these factors relate to several differen type of data 
stores.
:::

## Road Map{background-image="img/slides/trail.png" background-size="40%"
            background-opacity="0.9" background-position="80% 30%"}

::: {style="font-size: 90%;"}

-   Data
    -   What is data?
    -   Data Types
    -   Data Structures 
-   Data Stores 
    -   Flat File vs. Database
    -   Spreadsheet Software
    -   Relational Databases
    -   NoSQL Databases
-   Picking a Data Store

:::

### Credits {background-image="img/slides/trail.png"
                    background-size="8%" background-opacity="0.9"
                    background-position="97% 97%"}
::: {style="font-size: 70%;"}

All images were created by Elise Hellwig unless otherwise noted. Movie
information courtesy of IMDb ([https://www.imdb.com][imdb]). Used with
permission for non-commercial purposes only.

[imdb]: https://www.imdb.com

:::
#### Icons - color modified

::: {style="font-size: 45%;"}

Introduction: [By SkepticalScience - Own work][rm], CC BY-SA 4.0

Data: [By priyanka, "data", an icon from Noun Project][fr], CC BY 4.0

Tabular Data: [By Adam Mullin - Noun Project][tad], CC0

Tree Data: [By HitomiAkane, Tree icon-arzwiki.svg][td], CC BY-SA 4.0

Graph Data: [By Adam Beasley - The Noun Project][gd], CC BY 3.0

Relational Data: [categories by Nira Inds, Noun Project][rd], CC BY 3.0

Data Stores: [By Gaelen Pinnock][ds] - Designer commissioned by the UCT Research
office, CC BY-SA 4.0

Spreadsheets: [By Icons8 - Noun Project][ss], CC0 

Relational Databases: [By Aybige - The Noun Project][rd], CC BY 4.0

NoSQL Databases: [By Five by Five - Noun Project][nd], CC0

How To Decide: [By SimpleIcon http://www.simpleicon.com/][htd], CC BY 3.0, 

Further Reading: [By Icon Lauk from the Noun Project][fr], CC BY 3.0 
:::

[rm]: https://commons.wikimedia.org/w/index.php?curid=99619583
[tad]: https://commons.wikimedia.org/w/index.php?curid=67122938
[td]: https://commons.wikimedia.org/w/index.php?curid=130967171
[gd]: https://commons.wikimedia.org/w/index.php?curid=105266675
[rd]: https://thenounproject.com/icon/categories-6069462/
[ds]: https://commons.wikimedia.org/w/index.php?curid=78355715
[ss]: https://commons.wikimedia.org/w/index.php?curid=67122942
[rd]: https://commons.wikimedia.org/w/index.php?curid=64472365
[nd]: https://commons.wikimedia.org/w/index.php?curid=64905590
[htd]: https://commons.wikimedia.org/w/index.php?curid=47382021
[fr]: https://commons.wikimedia.org/w/index.php?curid=109499378

# Data{background-image="img/slides/Noun_Data.png" background-size="95%"
      background-opacity="0.1"}
      

<br>

> Data (noun): Quantities, characters, or symbols...considered collectively.
>
> \- Oxford English Dictionary

## What is data?{background-image="img/slides/Noun_Data.png"
                background-size="8%" background-position="97% 97%"}

<br>
<center>

**Data is information translated into a form for storage and later use. **

</center>

<br>

That form could be:

-   Rows and columns of a spreadsheet
-   A visual diagram
-   Written human language
-   And many others...

:::{.notes}

-   paper is still data, and can be a problem
-   form is the data's structure
-   what form our data takes can help guide our choice of data store
-   spreadsheets are very familiar
-   people now think of language as data
    
So how to we categorize our data?
:::


## Data Types{background-image="img/slides/Noun_Data.png"
              background-size="8%" background-position="97% 97%"}

Data type tells your computer what types of operations make sense.

-   integer
-   decimal/floating point numbers
-   categorical (small, medium, large)
-   characters (text)
-   Boolean values (TRUE or FALSE)
-   dates and times
-   spatial data

:::{.notes}

-   Side effects of working on a computer
-   May be different than computer science and informatics data types
-   tells the computer what to do with a piece of information
-   Single point can have data type
-   1 as int, decimal, text and date

:::

## Data Structures{background-image="img/slides/Noun_Data.png"
                  background-size="8%" background-position="97% 97%"}
                  
<br>
<br>

::: {style="font-size: 130%;"}

Data Structure: a way of organizing data that makes it easier to store and use
:::
<br>
<br>

::: {style="font-size: 200%; text-align: center;"}
Question â†’ Data structure
:::
<br>


:::{.notes}

- capture info about relationship between data pts
- Need multiple points for structure
- structure makes some Qs easier and others harder
- structure choice just as important as analysis choice

:::

## Data Structures{background-image="img/slides/Noun_Data.png"
                  background-size="8%" background-position="97% 97%"}
                  
::: {style="font-size: 180%;"}
-   Tabular/columnar ![](img/slides/tabular.png){width="7%"}
-   Tree ![](img/slides/tree.svg){width="10%"}
-   Graph ![](img/slides/network.png){width="10%"}
-   Relational ![](img/slides/categories.png){width="10%"}
:::

:::{.notes}

-   may see yours already but don't worry if not
-   not an exhaustive list
-   if you don't see yours feel free to ask about it

:::
## Tabular Data{background-image="img/slides/tabular.png"
                background-size="6%" background-opacity="0.8"
                background-position="39% 9%"}

::: {style="font-size: 60%;"}
```{r, echo=FALSE}

library(kableExtra)

mpg_cap = paste("A subset of the mtcars data set, containing information",
                "about 32 cars from the 1974 Motor Trend Magazine",
                "(Henderson and Velleman 1981).")

kbl(mpg, caption = mpg_cap) |>
   scroll_box(width = "100%", height = "550px")

```
:::

:::{.notes}

-   rows + columns is organizing principle, mention convention
-   entities can be summarized with same set of chars
-   focus on questions over entire set of obs
-   sorting is easy, relationships not explicit
:::

### Tabular Data Research Questions{background-image="img/slides/tabular.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}
::: {style="font-size: 130%;"}

-   What is the average value of a particular measurement across a data set?
-   What is the range or spread of values in a data set?
-   Are there trends in the values of a variable?
-   How to two columns in a data set relate to each other?
:::

:::{.notes}
-   avg almond yield
-   range normal values for vitamin A
-   bay area temp increases
-   test predict likelihood of complications from diabetes

:::

### `mtcars` Tabular Questions{background-image="img/slides/tabular.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

::: {style="font-size: 70%;"}
```{r}
kbl(mpg) |>
   scroll_box(width = "100%", height = "600px")
```
:::

:::{.notes}

-   avg, range of mpg
-   relationship between mpg and other vars
-   relationship between cylinders and hp

:::

## Tree Data{background-image="img/slides/tree.svg"
             background-size="7%" background-opacity="0.8"
             background-position="33% 7%"}

<br>

![](img/House_of_Tudor.png)

:::{.notes}
-   organized around relationships (nested)
-   relationships between entities is explicit
-   structure can be more important than entities

:::

### Tree Structure{background-image="img/slides/tree.svg"
                  background-size="8%" background-opacity="0.8"
                  background-position="97% 97%"}

<center>
![](img/tree_data.png){width="130%"}
</center>

:::{.notes}
-   root is the center, distance defines place
-   subsetting and searching is easy
-   this is where text data lives (doc structure)
:::


### Tree Data Research Questions{background-image="img/slides/tree.svg"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}
                                    
<br>

::: {style="font-size: 140%;"}
-   How many nodes separate two entities?
-   Which elements fall under a particular subtree?
-   Text or directory searching
:::


:::{.notes}
-   Elephants closer to rhinos or sloths
-   how many dinosaurs are there
-   which journals have most articles with AI this year

:::


### `mtcars` Tree Questions {background-image="img/slides/tree.svg"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

![](img/mpg_tree_data.png)

:::{.notes}
-   needed to parse manufacturers from names
-   how many models did japan produce
-   which manufacturer did most models
:::

## Graph Data{background-image="img/slides/network.png"
             background-size="7%" background-opacity="0.8"
             background-position="37% 4%"}

<br>


<center>![](img/graph_data.png){width="75%"}</center>

:::{.notes}
-   organized around relationships
-   structure more important than obs
-   no inherent center or hierarchy
:::


### Graph Data Research Questions {background-image="img/slides/network.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}
::: {style="font-size: 130%;"}

-   How many edges separate two entities?
-   How many paths are there between two nodes?
-   Which parts of the graph are most or least connected?
-   What is the direction or volume of flow between entities?
:::

### Abraham Lincoln Graph Data {background-image="img/slides/network.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>![](img/abraham_lincoln.png)</center>


## Relational Data{background-image="img/slides/categories.png"
                   background-size="7%" background-opacity="0.8"
                   background-position="44% 6%"}
                
<br>

<center>
![](img/student_characteristics.png){width="140%"}
</center>

<br>

### Relational Data Research Questions {background-image="img/slides/categories.png"
                                     background-size="8%"
                                     background-opacity="0.8"
                                     background-position="97% 97%"}
                                     

::: {style="font-size: 140%;"}

-   Which groups are the largest or smallest?
-   Do certain memberships tend to co-occur?
-   How many groups does an entity tend to belong to?

:::

### `mtcars` Relational Questions {background-image="img/slides/categories.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}


<center>![](img/mpg_relate_data.png){width="100%"}</center>


# Data Stores {background-image="img/slides/data-store.png" 
               background-size="60%"
               background-opacity="0.1"}

> A data store is repository for persistently storing and managing collections
> of data which include not just repositories like databases, but also simpler
> store types such as simple files, emails etc.
>
> Wikipedia


## Data Store Definitions {background-image="img/slides/data-store.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<br>

::: {style="font-size: 120%;"}


**Data store:** where your data is saved + how you interact with your data

<br>

**GUI:** Graphical User Interface, a software application that allows you to 
interact with the computer via icons, buttons, and windows.

:::

## Data Store Definitions {background-image="img/slides/data-store.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<br>

::: {style="font-size: 120%;"}


**Query:** database commands that create, read, update, delete (CRUD) 

<br>

**Transaction:** the unit of work in a database, ideally succeeds or fails as a 
unit.

:::



## Types of Data Stores {background-image="img/slides/data-store.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>

![](img/data_stores.png){width="100%"}
</center>


## {background-image="img/slides/data-store.png" background-size="8%"
    background-opacity="0.8" background-position="97% 97%"}

<center>
![](img/data_store_factors.png){width="80%"}
</center>

# Spreadsheet Software{background-image="img/slides/spreadsheet.png" 
               background-size="60%"
               background-opacity="0.2"}

## Spreadsheet Software{background-image="img/slides/spreadsheet.png"
                background-size="8%"
                background-opacity="0.8"
                background-position="97% 97%"}

::: {style="font-size: 90%;"}

1.  **Structure:** tabular

2.  **Interaction:** Graphical User Interface (GUI), reformatting is hard

3.  **Management:**
    
    - Managing multiple users is challenging
    - Easy to introduce typos or erros when adding data

4.  **Computing Resources:**

    - Software is easy to use and widely available
    - GUI limits data size
    - Lots of data duplication

:::
<!--
-   Imposes tabular data structure
-   Widely available and easy to use via a Graphical User Interface (GUI)
-   Generally limited to 1 million rows or 10 million cells if using a GUI
-   Setting permissions is cumbersome
-   Easy to introduce typos or errors
-   May cause a lot of data duplication
-->
## Spreadsheet Data{background-image="img/slides/spreadsheet.png"
                    background-size="8%"
                    background-opacity="0.8"
                    background-position="97% 97%"}

::: {style="font-size: 55%;"}
```{r, echo=FALSE}

library(data.table)
library(kableExtra)

dh = fread('data/die_hard.csv', header=FALSE)
setnames(dh, names(dh),
         c('title_id', 'person_id', 'title', 'premiered', 
           'runtime', 'genres', 'rating', 'votes', 'name', 'birth',
            'death', 'role', 'characters'))

dh_cap = paste("Information from IMDB about the Die Hard movie franchise and",
               "the people who acted in those films.")

dh = dh[,.(title_id, person_id, title, name, characters, premiered,
           runtime, genres, rating, votes, birth, death, role)]

kbl(dh, caption=dh_cap) |>
  scroll_box(width = "100%", height = "600px")

```
:::

## Example Spreadsheet Software{background-image="img/slides/spreadsheet.png"
                                background-size="8%"
                                background-opacity="0.8"
                                background-position="97% 97%"}

-   Microsoft Excel
-   Google Sheets
-   Numbers
-   LibreOffice Calc\*
-   OpenRefine\*
-   Open Science Framework\*

\* Open Source

# Relational Database Management Systems (RDBMS) {background-image="img/slides/database.png" 
                       background-size="60%"
                       background-opacity="0.2"}

## RDBMSs{background-image="img/slides/database.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

::: {style="font-size: 77%;"}

1. **Structure:** Tables connected by shared columns called keys

2. **Interaction:** 

    - SQL (Structured Query Language)
    - Data manipulation is easy and reproducible

3. **Management**

    - Built in data quality control and multi-user management
    - Standardizes data updates
    - Provides definitive version of your data

4. **Computing Resources**

    - No built-in size restrictions
    - Requires some specialized setup
    - thousands of transactions per day

:::

## Relational Keys{background-image="img/slides/database.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

Pair of columns with the same values

![](img/slides/linked_tables.png)


## IMDb Entity Relationship Diagram {background-image="img/slides/database.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

![](img/imdb_ERD.png)

## Why use an RDBMS? {background-image="img/slides/database.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

::: {style="font-size: 120%;"}


-  Reduce data duplication

-  Speed up and standardize accessing and updating the data

-  Ease of reformatting data

-  Ensure data integrity

:::

## Example RDBMS Software {background-image="img/slides/database.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

::: {style="font-size: 60%;"}
```{r, echo=FALSE}

sql = read.csv('data/sql_software.csv')

sql_cols = c("Software", "Support", "Cost", "License", "Spatial Data")

kbl(sql, col.names=sql_cols) 

```
:::

# NoSQL Management Systems{background-image="img/slides/nosql.png" 
                       background-size="60%"
                       background-opacity="0.3"}

## NoSQL Databases{background-image="img/slides/nosql.png"
                                background-size="8%"
                                background-opacity="0.8"
                                background-position="97% 97%"}

::: {style="font-size: 77%;"}


1. **Structure:** documents, trees, graphs, key-value pairs, wide column tables

2. **Interaction:** 

    - Via various query languages
    - Data manipulation is easy and reproducible

3. **Management**

    - Multi-user management
    - Standardizes data updates
    - Provides somewhat definitive version of your data

4. **Computing Resources**

    - No built-in size restrictions
    - Requires some specialized setup
    - millions of transactions per day
:::

## Why Use NoSQL Databases?{background-image="img/slides/nosql.png"
                                background-size="8%"
                                background-opacity="0.8"
                                background-position="97% 97%"}

::: {style="font-size: 140%;"}


-  Compatible with multiple data structures

-  Data transactions are much faster than other data stores

-  Adding storage capacity is easier than for other data stores

:::

::: {style="font-size: 55%;"}


## Example NoSQL Software{background-image="img/slides/nosql.png"
                                background-size="8%"
                                background-opacity="0.8"
                                background-position="97% 97%"}

```{r, echo=FALSE}

nosql = read.csv('data/nosql_software.csv')

nosql_cols = c("Software", "Data Structure", "Query Functionality",
               "Transactions", "Cost", "Spatial Data")

kbl(nosql, col.names=nosql_cols) 


```

:::

# How to Decide? {background-image="img/slides/lightbulb.png" 
                       background-size="60%"
                       background-opacity="0.1"}

<br>


## {background-image="img/slides/lightbulb.png" background-size="8%"
    background-opacity="0.8" background-position="97% 97%"}

<center>
![](img/data_store_factors.png){width="80%"}
</center>

## {background-image="img/slides/lightbulb.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>
![](img/slides/questions.png)
</center>


## Data Structure Decision{background-image="img/slides/lightbulb.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>
![](img/slides/structure.png)
</center>


## Data Interaction Decision{background-image="img/slides/lightbulb.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>
![](img/slides/interaction.png)
</center>




## Data Management Decision{background-image="img/slides/lightbulb.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>
![](img/slides/management.png){width="80%"}
</center>



## Computing Resources Decision{background-image="img/slides/lightbulb.png"
                                    background-size="8%"
                                    background-opacity="0.8"
                                    background-position="97% 97%"}

<center>
![](img/slides/cr.png)
</center>

## {background-image="img/slides/lightbulb.png"
                                background-size="40%"
                                background-opacity="0.8"
                                background-position="80% 50%"}
::: {style="font-size: 500%;"}

**Q & A**
:::

## Further Reading{background-image="img/slides/book.png" 
                       background-size="60%"
                       background-opacity="0.3"} 

### General Database Information {background-image="img/slides/book.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

-   [[An Overview of Databases and Data Storage Reader]{.underline}][dl_db]
-   [[Intro to Databases (for people who donâ€™t know a whole lot about them)]{.underline}][medium]
-   [[Database Management System (DBMS) Tutorial]{.underline}][g4gsql]
-   [[Creating a database from scratch]{.underline}][create]
-   [[NoSQL Explained]{.underline}][nosql]
-   [[Introduction to NoSQL]{.underline}][g4gno]

### Learning Query Languages {background-image="img/slides/book.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

-   [[Intro to SQL for Querying Databases Reader]{.underline}][dl_sql]
-   [[Spatial SQL Reader]{.underline}][dl_ssql]
-   [[W3Schools SQL Tutorial]{.underline}][w3sql]
-   [[W3Schools PostgreSQL Tutorial]{.underline}][w3post]
-   [[W3Schools MongoDB Tutorial]{.underline}][w3mongo]

### Campus Database Resources {background-image="img/slides/book.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}
::: {style="font-size: 80%;"}

-   UC Davis DataLab [Office Hours][oh]:
    - Mondays, 1-2pm via Zoom
    - Tuesdays 1-2pm in person (Shields Library, room 360)

-   [[Research Data Services]{.underline}][rds], 
    and the [[research services librarians]{.underline}][email]
    
-   [[Campus Data Services Catalog]{.underline}][cds]
    
-   [[Research Data Management Topic Guide]{.underline}][rdm]

-   [[UC Davis Cloud Services]{.underline}][cloud], includes Amazon Web Services,
    Microsoft Azure, and private cloud services
    
-   [[Research Electronic Data Capture (REDCap)]{.underline}][redcap]

:::
## References {background-image="img/slides/book.png"
                                background-size="8%"
                                background-opacity="0.9"
                                background-position="97% 97%"}

::: {#refs}
:::




[medium]: https://medium.com/@rwilliams_bv/intro-to-databases-for-people-who-dont-know-a-whole-lot-about-them-a64ae9af712
[rds]: https://library.ucdavis.edu/data-analysis-and-management/
[redcap]: https://health.ucdavis.edu/data/redcap.html
[rdm]: https://guides.library.ucdavis.edu/data-management
[cds]: https://servicehub.ucdavis.edu/servicehub?id=catalog&spa=1&sys_id=58cf6a65db87d09009ad5055ca96194d
[cloud]: https://cloud.ucdavis.edu/services-available
[email]: mailto:dataservices@ucdavis.edu
[w3sql]: https://www.w3schools.com/sql/
[w3post]: https://www.w3schools.com/postgresql/index.php
[w3mongo]: https://www.w3schools.com/mongodb/index.php
[nosql]: https://www.mongodb.com/nosql-explained
[g4gno]: https://www.geeksforgeeks.org/introduction-to-nosql/
[g4gsql]: https://www.geeksforgeeks.org/dbms/
[create]: https://interestingengineering.com/lists/build-a-database-part-1
[dl_db]: https://ucdavisdatalab.github.io/workshop_intro_to_databases/
[oh]: https://datalab.ucdavis.edu/office-hours/
